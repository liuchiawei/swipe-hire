// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  profile           profile?
  resume            resume?
  viewed            viewed[]
  collection        collection[]
}

model profile {
  id                Int         @id @default(autoincrement())
  userId            Int         @unique @map("user_id")
  name              String
  birth             String
  gender            String
  location          String
  education         String
  avatar            String
  createdAt         DateTime    @default(now()) @map("created_at")
  updatedAt         DateTime    @updatedAt @map("updated_at")
  user              user        @relation(fields: [userId], references: [id])
}

model resume {
  id                Int         @id @default(autoincrement())
  userId            Int         @unique @map("user_id")
  skills            Json
  experience        Json
  bio               String
  createdAt         DateTime    @default(now()) @map("created_at")
  updatedAt         DateTime    @updatedAt @map("updated_at")
  user              user        @relation(fields: [userId], references: [id])
}

model company {
  id                Int         @id @default(autoincrement())
  name              String
  industry          String
  location          String
  position          String
  salary            Int
  description       String?
  url               String?
  requirement       Json
  viewed            viewed[]
  collection        collection[]
}

model viewed {
  id                Int       @id @default(autoincrement())
  userId            Int       @map("user_id")
  companyId         Int       @map("company_id")
  viewedAt          DateTime  @default(now()) @map("viewed_at")
  user              user      @relation(fields: [userId], references: [id])
  company           company   @relation(fields: [companyId], references: [id])
}

model collection {
  id                Int       @id @default(autoincrement())
  userId            Int       @map("user_id")
  companyId         Int       @map("company_id")
  collectedAt       DateTime  @default(now()) @map("collected_at")
  user              user      @relation(fields: [userId], references: [id])
  company           company   @relation(fields: [companyId], references: [id])
}
